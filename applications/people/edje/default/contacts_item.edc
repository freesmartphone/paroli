
group { 
    name: "item";
    min: 470 60;
    max: 470 60;
    script {
        public drag_value;
        public mouse_x;
        public dragging = 1;
    }
    
    parts {
        part {
            name: "main_base";
            type: RECT;
            description { 
                state: "default" 0.0;
                color:0 0 0 255;
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
        
        part {
            name: "msgs-button-base";
            type: RECT;
            description { 
                state: "default" 0.0;
                color:0 0 0 255;
                rel1 { relative: 0.01 0.01; }
                rel2 { relative: 0.21 0.99; }
            }
        }
        
        part {
            name: "msgs-button-text";
            type: TEXT;
            mouse_events: 0;
            description { 
                state: "default" 0.0;
                color:255 255 255 255;
                text {
                    align: 0.0 0.0;
                    size: 40;
                    text: "Msg";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"msgs-button-base";
                }
            }
        }
        
        part {
            name: "msgs-button-blocker";
            type: RECT;
            description { 
                state: "default" 0.0;
                color:0 0 0 255;
                rel1 {
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"msgs-button-base";
                }
            }
            description {
                state: "changed" 0.0;
                visible:0;
                color:0 0 0 0;
                rel1 {
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
            }
        }
        part {
            name: "base";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 {
                    relative: 0.01 0.01;
                    to:"main_base";
                }
                rel2 {
                    relative: 1.0 0.99;
                    to:"main_base";
                }
            }
            description { 
                state: "changed" 0.0;
                color: 0 0 0 255;
                rel1 {
                    relative: 0.21 0.01;
                    to: "main_base";
                }
                rel2 {
                    relative: 0.99 0.99;
                    to: "main_base";
                }
            }
        }
        
        part {
            name: "effect-rect";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 {
                    relative: 0.0 0.0;
                    to:"base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"base";
                }
            }
            description { 
                state: "move_in" 0.0;
                inherit:"default" 0.0;
                color:255 255 255 180;
            }
            description { 
                state: "highlighted" 0.0;
                inherit:"default" 0.0;
                color:255 255 255 255;
            }
            description { 
                state: "move_out" 0.0;
                inherit:"default" 0.0;
                color:255 255 255 180;
                rel1 { relative: 0.9 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
        
        part {
            name: "label";
            mouse_events: 0;
            type: TEXT;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 0.0;
                    size: 40;
                    text: "Testos";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
            description { 
                state: "highlighted" 0.0;
                inherit:"default" 0.0;
                color: 0 0 0 255;
            }
        }
        
        part {
            name: "move_button";
            type: RECT;
            ignore_flags: ON_HOLD;
            dragable {
                x: 1 1 0;
                y: 0 0 0;
                confine:"base";
            }
            description { 
                state: "default" 0.0;
                color: 0 0 0 0;
                min: 470 60;
                rel1 {
                    relative: 0.0 0.0;
                    to:"base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"base";
                }
            }
            description { 
                state: "changed" 0.0;
                color: 0 0 0 0;
                rel1 {
                    relative: 0.0 0.0;
                    to:"base";
                }
                rel2  {
                    relative: 0.0 0.0;
                    to:"base";
                }
            }
        }
    }
    
    programs {
        // program {
        //      name: "list-item-move-in-effect";
        //      signal: "mouse,in";
        //      source: "move_button";
        //      action: STATE_SET "move_in" 0.0;
        //      target: "effect-rect";
        //      after: "list-item-label-highlighted";
        // }
        // program {
        //      name: "list-item-label-highlighted";
        //      action: STATE_SET "highlighted" 0.0;
        //      target: "label";
        // }
        // program {
        //      name: "list-item-mouse-out-effect";
        //      signal: "mouse,out";
        //      source: "move_button";
        //      action: STATE_SET "default" 0.0;
        //      target: "label";
        //      after: "list-item-mouse-out-effect_2";
        // }
        // program {
        //     name: "list-item-mouse-out-effect_2";
        //     action: STATE_SET "move_out" 0.0;
        //     transition: LINEAR 0.32;
        //     target: "effect-rect";
        //     after: "list-item-mouse-out-effect_3";
        // }
        // program {
        //     name: "list-item-mouse-out-effect_3";
        //     action: STATE_SET "default" 0.0;
        //     target: "effect-rect";
        // }
        program {
            name: "all_catcher";
            signal: "*";
            source: "move_button";
            script { emit(sig,"embryo"); }
        }
        program {
            name: "drag_catcher";
            signal: "drag,start";
            source: "move_button";
            script {
                new x;
                new y;
                set_int(drag_value,1);
                get_mouse(x,y)
                set_int(mouse_x,x)
                emit("drag_start","embryo")
            }                   
        }
        program {
            name: "drag_catcher2_5";
            signal: "hold,off";
            source: "move_button";
            script {
                if (get_int(drag_value) == 1) {
                    run_program(PROGRAM:"drag_catcher2");
                }
            }                   
        }
        program {
            name: "clickable-pressed";
            signal: "mouse,clicked,1";
            source: "move_button";
            script {
                if (get_int(drag_value) != 1) {
                  run_program(PROGRAM:"clickable-pressed-part-two")
                }
                set_int(drag_value,0);
            }
        }
        program {
            name: "clickable-pressed-part-two";
            action: STATE_SET "highlighted" 0.0;
            transition: LINEAR 0.15;
            target: "label";
            target: "effect-rect";
            after: "clickable-pressed-part-three";
        }
        program {
            name: "clickable-pressed-part-three";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.15;
            target: "label";
            target: "effect-rect";
            after: "clickable-pressed-part-four";
        }
        program {
            name: "clickable-pressed-part-four";
            script {
                emit( "contact_details", "contacts");
            }
        }
        program {
            name: "effect-rect";
            signal: "mouse,clicked,1";
            source: "effect-rect";
            script {
                new state[100];
                new Float:val;
                get_state(PART:"msgs-button-blocker", state[0], 100, val);
                if (strcmp(state, "default") == 0) {
                    run_program(PROGRAM:"fold-back");
                    emit("folding back", "embryo");
                } else {
                    emit(state, "embryo");
                }
            }
        }
        program {
            name: "drag_killer";
            signal: "drag,stop";
            source: "move_button";
            script {
                set_int(drag_value,0);
            }
        }
        program {
            name: "drag_catcher2";
            // signal: "drag,stop";
            // source: "move_button";
            script {
                new x;
                new y;
                get_mouse(x, y);
                if (x - get_int(mouse_x) < -30) {
                    // left swipe
                    // emit("pre left swipe", "embryo")
                    // if (get_int(dragging) != 0){
                    run_program(PROGRAM:"fold-back");
                    emit("left swipe", "embryo");
                    set_int(drag_value,0);
                    // }
                } else if (x - get_int(mouse_x) > 30) {
                    // right swipe                
                    // emit("pre right swipe", "embryo")
                    // if (get_int(dragging) != 0){
                    run_program(PROGRAM:"rightward-slide");
                    emit("close_all", "embryo");
                    set_int(drag_value,0);
                    // }
                } else {
                    set_int(drag_value,0);
                }
            }                   
        }
        program {
            name: "rightward-slide";
            action: STATE_SET "changed" 0.0;
            transition: LINEAR 0.32;
            target: "base";
            target: "move_button";
            target: "msgs-button-blocker";
            after: "send_all_close";
        }
        program {
            name: "send_all_close";
            script {
                emit("fold-back","list_command");
            }
        }
        program {
            name: "fold-back";
            signal: "fold-back";
            source: "list";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.32;
            target: "base";
            target: "msgs-button-blocker";
            target: "move_button";
        }
        program {
            name: "disable_draging";
            signal: "list_only_mode";
            source: "*";
            script {
                // set_int(dragging,0)
                emit("would disable dragging","embryo");
            }
        }
        program {
            name: "msg-pressed";
            signal: "mouse,up,1";
            source: "msgs-button-base";
            // action: SIGNAL_EMIT "create_message" "contacts";
            script {
                emit("create message", "embryo");
                emit("create_message", "*");
            }
        }
    }
}

