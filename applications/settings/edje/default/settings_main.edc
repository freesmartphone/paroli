// these are the elements you can form edje objects from
group {
    // the name parameter is the one also used by python to 
    // retrieve the group
    name: "main";
    // the are the maximum and minimum size of the canvas
    // if you do not specifiy them your object will not be visible
    min: 480 590;
    // every group can contain any number of parts, all of which are 
    // generated when the group is called
    script {
        public sublist=0;
    }
    parts {            
        part {
            // it is advisable to have a base part which catches 
            // all clicks not made on any other object and prevents them 
            // from getting to the elements laying below
            name: "base";
            // edc knows several types: IMAGE, RECT, TEXT etc.
            // rect will open a simple rectangle between rel1 and rel2 
            // (see below)
            type: RECT;
            // the description part defines the design of the part
            description { 
                // an element can have multiple designs depending on its state
                state: "default"  0.0;
                color: 0 0 0 255;
                // in edc size can be allocated via pixels as well as 
                // relative in most cases relativ sizes are more advisable 
                // as they allow easy scaling
                rel1 {
                    // rel1 defines the top left of the element
                    // the first is the x-value and the second the y-value
                    relative: 0.0 0.0;
                }
                rel2 {
                    // rel2 defines the bottom right of the element
                    // the first is the x-value and the second the y-value
                    relative: 1.0 1.0;
                }
            }
        }
        
        part {
            name: "send-button";
            type: RECT;
            description {
                state: "default" 0.0;
                visible: 0;
            }
            description { 
                state: "enabled" 0.0;
                color: 0 0 0 255;
                rel1 {
                    relative: 0.8 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 0.1;
                    to: "base";
                }
            }
            description {
                state: "clicked" 0.0;
                inherit: "enabled" 0.0;
                color: 255 255 255 255;
            }
        }
        
        part {
            name: "send-button-text";
            type: TEXT;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                visible: 0;
            }
            description { 
                state: "enabled" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 0.0;
                    size: 24;
                    text: "Save";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "send-button";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "send-button";
                }
            }
            description {
                state: "clicked" 0.0;
                inherit: "enabled" 0.0;
                color: 0 0 0 255;
            }
        }
        
        part {
            name: "entry";
            type: SWALLOW;
            description { 
                state: "default" 0.0;
                rel1 { 
                    to: "base";
                    relative: 0.0 0.11;
                }
                rel2 {
                    to: "base";
                    relative: 1.0 1.0;
                }
            }
        }
        
        part {
            name: "back-button";
            type: IMAGE;
            description {
                state: "default" 0.0;
                min: 159 69;
                max: 159 69;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 160 88;
                    to: "base";
                }
                image { normal: "back.png"; }
                visible: 1;
            }
            description {
                state: "sublist" 0.0;
                inherit: "default" 0.0;
            }
            description {
                state: "pressed" 0.0;
                inherit: "default" 0.0;
                image.normal: "back_pressed.png";
            }
        }
        
        part {
            // the actual Hello World text part
            // name the part
            name: "list";
            // make it a text part
            type: SWALLOW;
            description { 
                // define the default state
                state: "default" 0.0;
                // define the font color in rgba
                color: 0 0 0 255;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 87;
                    to: "base";
                }
                rel2 {
                    relative: 0.99 0.99;
                    to: "base";
                }
            }
            description { 
                // define the default state
                state: "sublist" 0.0;
                // define the font color in rgba
                color: 0 0 0 255;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 87;
                    to: "base";
                }
                rel2 {
                    relative: 0.99 0.99;
                    to: "base";
                }
            }
        }
    }
    
    // a new part in this is the programs, they are simple functions 
    // executed on certain events
    programs {
        program {
            name: "enable_sublist";
            signal: "sublist_mode";
            source: "*";
            action: STATE_SET "sublist" 0.0;
            target: "list";
            target: "back-button";
            after: "set-sublist";
        }
        program {
            name: "set-sublist";
            script { set_int(sublist,1); }
        }
        program {
            name: "enable_savebutton";
            signal: "save_button";
            source: "*";
            action: STATE_SET "enabled" 0.0;
            target: "send-button";
            target: "send-button-text";
        }
        program {
            name: "back_clicked";
            signal: "mouse,clicked,1";
            source: "back-button";
            script {
                if (get_int(sublist) == 1) {
                    emit("back","main_command");
                    set_int(sublist,0);
                } else {
                    emit("back","edje");
                    set_int(sublist,0);
                }
            }
        }
        program {
            name: "back-button-pressed";
            signal: "mouse,down,1";
            source: "back-button";
            action: STATE_SET "pressed" 0.0;
            target: "back-button";
        }
        program {
            name: "send_down";
            signal: "mouse,down,1";
            source: "send-button";
            action: STATE_SET "clicked" 0.0;
            target: "send-button";
            target: "send-button-text";
        }
        program {
            name: "send_up";
            signal: "mouse,up,1";
            source: "send-button";
            action: STATE_SET "enabled" 0.0;
            target: "send-button";
            target: "send-button-text";
            after: "send_send";
        }
        program {
            name: "send_send";
            action: SIGNAL_EMIT "pressed" "save";
        }
    }
}

