group {
    name: "tb";
    min: 440 50;
    script {
        public clock_cb(val) {
            new buf[11];
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new Float:s;
            date(year, month, day, yearday, weekday, hour, minute, second);
            s = 60.0 - second;
            while (s < 0.0) s = s + 5.0;
            timer(60.0 - second, "clock_cb", 1);
            if ((hour < 10) && (minute < 10)) {
                snprintf(buf, 10, "0%i:0%i", hour, minute);
            } else if ((hour < 10) && (minute >= 10)) {
                snprintf(buf, 10, "0%i:%i", hour, minute);
            } else if ((hour >= 10) && (minute < 10)) {
                snprintf(buf, 10, "%i:0%i", hour, minute);
            } else if ((hour >= 10) && (minute >= 10)) {
                snprintf(buf, 10, "%i:%i", hour, minute);
            }
            set_text(PART:"clock", buf);
        }
    }
    
    parts {
        part {
            name: "base";
            type: RECT;
            mouse_events: 1;
            description { 
                state: "default"  0.0;
                color: 0 0 0 255;
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
        
        part {
            name: "clock";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.5 0.0;
                    size: 18;
                    text: "20:08";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
        }
    }
    
    programs {
        program { 
            name: "init";
            signal: "load";
            source: "*";
            script { clock_cb(1); }
        }
        program { 
            name: "top-bar-clicked";
            signal: "mouse,up,1";
            source: "base";
            action: SIGNAL_EMIT "top-bar" "del-button";
        }
    }
}

group { 
    name: "main";
    min: 480 590;
    max: 480 640;
    script {
        public edit_done_button_clicked(val) {
            new state_name[30];
            new Float:dummy;
            get_state(PART:"edit-done-button", state_name, 30, dummy);
            if (!strcmp(state_name, "default")) {
                set_state(PART:"edit-done-button", "edit_mode", 1.0);
                emit("to_edit_mode", "edit-done-button");
            } else {
                set_state(PART:"edit-done-button", "default", 0.0);
                emit("to_default_mode", "edit-done-button");
            }
        }
    }
    
    parts {
        part {
            name: "base";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
        
        part {
            name: "back-button";
            type: IMAGE;
            description {
                state: "default" 0.0;
                min: 159 69;
                max: 159 69;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 160 88;
                    to: "base";
                }
                image { normal: "back.png"; }
                visible: 1;
            }
            description {
                state: "pressed" 0.0;
                inherit:"default" 0.0;
                image.normal: "back_pressed.png";
            }
        }
        part {
            name: "edit-done-button";
            type: IMAGE;
            description {
                state: "default" 0.0;
                min: 159 69;
                max: 159 69;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }
                image { normal: "sweep.png"; }
                visible: 1;
            }
            description {
                state: "edit_mode" 0.0;
                inherit: "default" 0.0;
                image { normal: "save.png"; }
            }
            description {
                state: "edit_mode_pressed" 0.0;
                inherit: "default" 0.0;
                image { normal: "save_pressed.png"; }
            }
            description{
                state: "ListEmpty" 0.0;
                inherit: "default" 0.0;
                visible:0;
            }  
        }
        part {
            name: "list-empty-text";
            type: TEXT;
            description {
                state: "default" 0.0;
                min: 152 18;
                max: 152 18;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 306 29;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 458 47;
                    to: "base";
                }
                text {
                    font: "Sans";
                    text: "no call records";
                    align: 0.1 0.5;
                    size: 18;
                }
                visible: 0;
            }
            description {
                state: "ListEmpty" 0.0;
                inherit: "default" 0.0;
                visible:1;
            }
        }
        
        part {
            name:"list";
            type:SWALLOW;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                rel1 { 
                    to:"base";
                    relative: 0.0 0.0;
                    offset: 0 99;
                }
                rel2 {
                    to:"base";
                    relative: 1.0 1.0;
                    // offset: 450 582;
                }
            }
        }
        
        part {
            name: "layover";
            type: RECT;
            mouse_events: 0;
            description { 
                state: "default" 0.0;
                visible:0;
                color:0 255 0 100;
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
    }
    
    programs {  
        program { 
            name: "back-button";
            signal: "mouse,up,1";
            source: "back-button";
            action: SIGNAL_EMIT "back" "edje";
            after: "back-button-unpressed";
        }
        program { 
            name: "back-button-unpressed";
            action: STATE_SET "default" 0.0;
            target: "back-button";
        }      
        program {
            name: "back-button-pressed";
            signal: "mouse,down,1";
            source: "back-button";
            action: STATE_SET "pressed" 0.0;
            target: "back-button";
        }
        program { 
            name: "edit_pressed";
            signal: "mouse,down,1";
            source: "edit-done-button";
            action: STATE_SET "edit_mode_pressed" 0.0;
            target: "edit-done-button";
            script {
                new state_name[30];
                new Float:dummy;
                get_state(PART:"edit-done-button", state_name, 30, dummy);
                if (!strcmp(state_name, "edit_mode")) {
                    set_state(PART:"edit-done-button", "edit_mode_pressed", 1.0);
                }
            }
        }
        program { 
            name: "edit_clicked";
            signal: "mouse,up,1";
            source: "edit-done-button";
            script { edit_done_button_clicked(1); }
        }
        program { 
            name: "empty_init";
            signal: "ListEmpty";
            source: "*";
            action: STATE_SET "ListEmpty" 0.0;
            target: "list-empty-text";
            target: "edit-done-button";
        }
        program { 
            name: "list_filled";
            signal: "ListFilled";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "list-empty-text";
            target: "edit-done-button";
        }
    }
}

    
group {
    name: "history-label";
    min: 80 30;
    max: 480 30;
    parts {
        part {
            name: base;
            type: RECT;
            description {
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
        }
        part {
            name: text;
            type: TEXT;
            description {
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 0.0;
                    size: 20;
                    text: "Missed";
                    font: "Sans";
                }
                rel1 { relative: 0.0 0.0; }
                rel2 { relative: 1.0 1.0; }
            }
            description {
                state: "Missed" 0.0;
                inherit:"default" 0.0;
                color: 255 0 0 255;
            }
            description {
                state: "Outgoing" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "Incoming" 0.0;
                inherit:"default" 0.0;
                color: 0 255 0 255;
            }
        }
    }
}

