group { name: "item";
       min: 470 100;
       max: 470 100;
       data{
          item: "attribute1" "peer";
          item: "attribute2" "get_contact()";
          item: "value" "None";
          item: "signal" "unknown";
       }
       script {
          public drag_value;
          public mouse_x;
        }
       
       parts {
        part
        {
            name:"main_base";
            type:RECT;
            description
                { 
                    state: "default" 0.0;
                    color:0 0 0 255;
                    rel1{
                        relative: 0.0 0.0;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                    }
                }
        }
        part
        {
            name: "msgs-button-base";
            type: RECT;
            description{ state: "default" 0.0;
                    color:0 0 0 255;
                    rel1{
                        relative: 0.01 0.01;
                    }
                    rel2 {
                        relative: 0.21 0.99;
                    }
                  }
        }
        part
        {
            name: "msgs-button-text";
            type: TEXT;
            mouse_events:0;
            description
            { 
                state: "default" 0.0;
                color:255 255 255 255;
                text
                {
                    align: 0.0 0.0;
                    size: 40;
                    text: "Re:";
                    font: "Sans";
                }
                rel1{
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"msgs-button-base";
                }
            }
        }
        part
        {
            name: "msgs-button-blocker";
            type: RECT;
            description
            { 
                state: "default" 0.0;
                color:0 0 0 255;
                rel1{
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to:"msgs-button-base";
                }
            }
            description
            {
                state : "moved" 0.0;
                visible:0;
                color:0 0 0 0;
                rel1{
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    to:"msgs-button-base";
                }
            }
        }
        part{
            name: "base";
            type: RECT;
            description{ 
                state: "default" 0.0;
                color:0 0 0 255;
                rel1{
                    relative: 0.01 0.01;
                    to:"main_base";
                }
                rel2 {
                    relative: 0.99 0.99;
                    to:"main_base";
                }
            }
            description{ 
                state: "moved" 0.0;
                color:0 0 0 255;
                rel1{
                    relative: 0.21 0.01;
                    to:"main_base";
                }
                rel2 {
                    relative: 0.99 0.99;
                    to:"main_base";
                }
            }
            description{
                state: "highlighted" 0.0;
                inherit: "default" 0.0;
                color: 255 255 255 255;
            }
        }
        part{
            name: "border-outer";
            type: RECT;
            mouse_events:0;
            description{ 
                state: "default" 0.0;
                visible:0;
                color:0 255 255 255;
                rel1{
                    to:"base";
                    relative: 0.01 0.01;
                }
                rel2 {
                    to:"base";
                    relative: 0.99 0.99;
                }
            }
            description{ 
                state: "changed" 0.0;
                visible:1;
                inherit:"default" 0.0;
            }
        }
        part{
            name: "label";
            mouse_events:0;
            type: TEXT;
            description { 
            state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 0.0;
                    size: 40;
                    text: "Testos";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 0.8 0.66;
                    to: "base";
                }
            }
            description{
                state: "highlighted" 0.0;
                inherit: "default" 0.0;
                color: 0 0 0 255;
            }
        }
        part{
            name: "label-number";
            type: TEXT;
            mouse_events:0;
            description { 
            state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.1 0.15;
                    size: 24;
                    text: "0000-00-0000000";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.67;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
            description{
                state: "highlighted" 0.0;
                inherit: "default" 0.0;
                color: 0 0 0 255;
            }
        }
        part{
            name: "status";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                visible:0;
                color: 255 255 255 255;
                text {
                    align: 0.1 0.15;
                    size: 20;
                    text: "";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.67;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
            description{
                state: "highlighted" 0.0;
                inherit: "default" 0.0;
                color: 0 0 0 255;
            }
        }
        part{
            name: "direction";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                visible:0;
                color: 255 255 255 255;
                text {
                    align: 0.1 0.15;
                    size: 20;
                    text: "";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.67;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
            description{
                state: "highlighted" 0.0;
                inherit: "default" 0.0;
                color: 0 0 0 255;
            }
        }
        part{
            name: "clickable";
            type: RECT;
            ignore_flags: ON_HOLD;
            dragable {
                x: 1 1 0;
                y: 0 0 0;
                confine:"base";
            }
            description{ state: "default" 0.0;
            color:0 0 0 0;
            min: 470 100;
            rel1{
                relative: 0.01 0.01;
                to:"base";
            }
            rel2 {
                relative: 0.99 0.99;
                to:"base";
            }
        }
        description{ 
            state: "moved" 0.0;
            color:0 0 0 0;
            min: 390 100;
            rel1{
                relative: 0.2 0.2;
                to:"base";
            }
            rel2 {
                relative: 0.99 0.99;
                to:"base";
            }
        }
    }
    
        part{
            name: "save-button";
            mouse_events:1;
            type: RECT;
            description { 
                state: "default" 0.0;
                visible:0;
            }
            description { 
                state: "visible" 0.0;
                color: 0 0 0 0;
                rel1 {
                    relative: 0.8 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 0.66;
                    to: "base";
                }
            }
        }
        part{
            name: "save-button-text";
            mouse_events:0;
            type: TEXT;
            description { 
                state: "default" 0.0;
                visible:0;
            }
            description { 
                state: "visible" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.5 0.5;
                    size: 20;
                    text: "Save";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "save-button";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "save-button";
                }
            }
        }
  }
    programs {
        program{
            name:"unknown-trigger";
            signal:"unknown";
            source:"*";
            action: STATE_SET "visible" 0.0;
            target: "save-button";
            target: "save-button-text";
        }
        program{
            name: "all_catcher";
            signal: "*";
            source: "clickable";
            script{
                emit(sig,"embryo");
            }
        }
        program{
            name: "drag_catcher";
            signal: "drag,start";
            source: "clickable";
            script{
                new x;
                new y;
                set_int(drag_value,1);
                get_mouse(x,y)
                set_int(mouse_x,x)
            }                   
        }
        program{
            name: "drag_catcher2_5";
            signal: "hold,off";
            source: "clickable";
            script{
                if (get_int(drag_value) == 1){
                    run_program(PROGRAM:"drag_catcher2");
                }
            }                   
        }
        program{
            name: "drag_catcher2";
            signal: "drag,stop";
            source: "clickable";
            script{
                new x;
                new y;
                get_mouse(x, y);
                if (x - get_int(mouse_x) < -30){
// //                     left swipe
                    run_program(PROGRAM:"fold-back");
                    emit("left swipe", "embryo");
                }else if (x - get_int(mouse_x) > 30){
// //                     right swipe                
                    run_program(PROGRAM:"rightward-slide");
                    emit("right swipe", "embryo");
                }else{
                    set_int(drag_value,0);
                }
            }                   
        }
        program{
            name: "drag_killer";
            signal: "drag,stop";
            source: "clickable";
            script{
                set_int(drag_value,0);
            }
        }
        program{
            name: "clickable-pressed";
            signal: "mouse,clicked,1";
            source: "clickable";
            script{
                if (get_int(drag_value) != 1){
                    run_program(PROGRAM:"clickable-pressed-part-two")
                }
                set_int(drag_value,0);
            }
        }
        program{
            name: "clickable-pressed-part-two";
            action: STATE_SET "highlighted" 0.0;
            transition: LINEAR 0.15;
            target: "base";
            target: "label";
            target: "label-number";
            target: "status";
            target: "direction";
            after: "clickable-pressed-part-three";
        }
        program{
            name: "clickable-pressed-part-three";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.15;
            target: "base";
            target: "label";
            target: "label-number";
            target: "status";
            target: "direction";
            after: "clickable-pressed-part-four";
        }
        program{
            name: "clickable-pressed-part-four";
            script{
                emit( "details", "edc");
            }
        }
        program{
            name: "rightward-slide";
            action: STATE_SET "moved" 0.0;
            transition: LINEAR 0.32;
            target:"base";
            target: "clickable";
            target:"msgs-button-blocker";
            after:"send_all_close";
        }
        program{
            name:"quick_message_signal";
            signal: "mouse,clicked,1";
            source: "msgs-button-base";
            script{
                emit("reply","messaging")
            }
        }
        
        program{
            name:"send_all_close";
            script{
                emit("fold-back","list_command");
            }
        }
        program{
            name: "fold-back";
            signal: "fold-back";
            source: "list";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.32;
            target:"base";
            target:"msgs-button-blocker";
            target: "clickable";
        }
        program{
            name: "save-button-pressed";
            signal: "mouse,clicked,1";
            source: "save-button";
            action: SIGNAL_EMIT "save" "edc";
        }
        program{
            name: "status-on-load";
            signal: "load";
            source: "*";
            script{
                new status[100];
                new direction[5];
                new sub_label[150];
                new pre_text[50];
                get_text(PART:"status", status, 100);
                get_text(PART:"direction", direction, 5);
                get_text(PART:"label-number", sub_label, 100);
                if (strcmp(status, "unread") == 0) {
                    snprintf(pre_text, 50 , "%s", "NEW! ");
                }else if ((strcmp(status, "read") == 0) && ( strcmp( direction, "out") == 0)){
                    snprintf(pre_text, 50 , "%s", "> ");
                }else if (strcmp(status, "unsent") == 0){
                    snprintf(pre_text, 50 , "%s", "DRAFT ");
                }
                emit(status,"embryo")
                strprep(sub_label,pre_text);
                set_text(PART:"label-number", sub_label);
            }
        }
    }
}
