
group { 
    name: "main";
    min:  480 575;
    max:  480 575;
    script {
        public zero = 0;
        public mytimer = 0;
        public calltimer_s = 0;
        public calltimer_m = 0;
        public calltimer_h = 0;
        public del_button_pressed = 0;
        public del_digit() {
            emit("del_digit near you", "embryo");
            new state[30];
            new Float:floaty;
            if (get_state(PART:"del-button", state[0], 30, floaty) == 0) {
                if (strcmp(state, "default") == 0 ||
                    strcmp(state, "clicked") == 0) {
                    new old[40];
                    old[39] = get_text(PART:"num_field-text",old,40);
                    new len = strlen(old);
                    new txt[61];
                    snprintf(txt, 60, "%i%s", len, old);
                    emit(txt, "embryo");
                    if (len != 0) {
                        new num[39];
                        strnprep(num, old, len-1);
                        set_text(PART:"num_field-text",num);
                    } else {
                        set_int(del_button_pressed,1);
                    }
                } else if (strcmp(state, "number") == 0 || 
                            strcmp(state, "number-pressed") == 0) {
                    new old[40];
                    old[39] = get_text(PART:"num_field-text",old,40);
                    new len = strlen(old);
                    new txt[61];
                    snprintf(txt, 60, "%i%s", len, old);
                    emit(txt, "embryo");
                    if (len != 0) {
                        new num[39];
                        strnprep(num, old, len-1);
                        set_text(PART:"num_field-text",num);
                        if (len == 1) {
                            set_state(PART:"del-button", "clicked", 0.0);
                        }
                    }
                } else if (strcmp(state, "pin") == 0) {
                    new old[40];
                    old[39] = get_text(PART:"num_field-text",old,40);
                    new old2[40];
                    old2[39] = get_text(PART:"pin-text",old2,40);
                    new len = strlen(old);
                    new txt[61];
                    snprintf(txt, 60, "%i%s", len, old);
                    emit(txt, "embryo");
                    if (len != 0) {
                        new num[39];
                        strnprep(num, old, len-1);
                        set_text(PART:"num_field-text",num);
                        new num2[39];
                        strnprep(num2, old2, len-1);
                        set_text(PART:"pin-text",num2);
                    }
                } else if (strcmp(state, "incoming") == 0) {
                    emit("mute-toggle", "del-button");
                    set_state(PART:"del-button", "silent", 0.0);
                } else if (strcmp(state, "active") == 0) {
                    emit("audio-toggle", "del-button");
                    set_state(PART:"del-button", "muted", 0.0);
                } else if (strcmp(state, "muted") == 0) {
                    emit("audio-toggle", "del-button");
                    set_state(PART:"del-button", "active", 0.0);
                } else {
                    emit("coming soon to a cinema near you", "embryo");
                }
            }
        }
        
        public start_timer(func[]) {
            new local_timer = timer(2.0, func, 1);
            emit("starting timer","embryo");
            set_int(mytimer, local_timer);
        }
        
        public add_plus(s) {
            cancel_timer(get_int(mytimer));
            set_int(mytimer,0);
            del_digit();
            emit("add plus","embryo");
            new state[30];
            new Float:floaty;
            if (get_state(PART:"num_field-text", state[0], 30, floaty) == 0) {
                if (strcmp(state, "default") == 0) {
                    add_sign("+")
                }
            }
        }
        
        public del_all(s) {
            set_text(PART:"num_field-text","");
        }
        
        public add_sign(sign[]) {
            new old[40];
            old[20] = get_text(PART:"num_field-text",old,40);
            new txt[60];
            new num[3];
            num[0] = sign[0];
            new state[30];
            new Float: floaty;
            new state2[30];
            new Float:floaty2;
            if (get_state(PART:"del-button", state2[0], 30, floaty2) == 0) {
                if (strcmp(state2, "default") == 0) {
                    set_state(PART:"del-button", "number", 0.0);
                }
            }
            if (get_state(PART:"num_field-text", state[0], 30, floaty) == 0) {
                if (strcmp(state, "pin") == 0) {
                    new pin[40];
                    pin[39] = get_text(PART:"pin-text",pin,39);
                    emit(pin,"embryo");
                    new txt2[60];
                    emit(num,"embryo");
                    snprintf(txt2, 60, "%s%s", pin, num);
                    set_text(PART:"pin-text", txt2);
                    emit(txt2,"embryo");
                    num = "*";
                }
                snprintf(txt, 60, "%s%s", old, num);
                set_text(PART:"num_field-text", txt);
                if (strcmp(state, "active") == 0) {
                    emit(num,"dtmf");
                }
            }
        }
        
        public set_flag(s) {
            set_int(zero,1);
            cancel_timer(get_int(mytimer));
            set_int(mytimer,0);
        }
        
        public stop_timer() {
            if (get_int(mytimer) != 0) {
                cancel_timer(get_int(mytimer));
            }
        }
        
        public calltime(val) {
            new hour[60];
            new minute[60];
            new second[60];
            new all[180];
            timer(1.0, "calltime", 1);
            set_state(PART:"duration_timer", "active", 0.0);
            if (get_int(calltimer_s) < 59) {
                set_int(calltimer_s,get_int(calltimer_s)+1);
            } else {
                set_int(calltimer_s,0);
                set_int(calltimer_m,get_int(calltimer_m)+1);
            }
            if (get_int(calltimer_m) == 60) {
                set_int(calltimer_m,0);
                set_int(calltimer_h,get_int(calltimer_h)+1);
            }
            if (get_int(calltimer_h) == 0) {
                snprintf(hour, 60, "%s", "");
            } else {
                snprintf(hour, 60, "%i:", get_int(calltimer_h));
            }
            if (get_int(calltimer_m) == 0) {
                snprintf(minute, 60, "%s", "00:");
            } else if (get_int(calltimer_m) < 10) {
                snprintf(minute, 60, "%s%i:", "0", get_int(calltimer_m));
            } else {
                snprintf(minute, 60, "%i:", get_int(calltimer_h));
            }
            if (get_int(calltimer_s) < 10) {
                snprintf(second, 60, "%s%i", "0", get_int(calltimer_s));
            } else {
                snprintf(second, 60, "%i", get_int(calltimer_s));
            }
            snprintf(all, 180, "%s%s%s", hour, minute, second);
            set_text(PART:"duration_timer",all);
        }
        
        public call_btn() {
            new state[30];
            new txt[60];
            new Float:floaty;
            if (get_state(PART:"call-button", state[0], 30, floaty) == 0) {
                if (strcmp(state, "default") == 0) {
                    snprintf(txt, 60, "state is %s", state);
                    emit(txt, "embryo");
                    new num[40];
                    num[39] = get_text(PART:"num_field-text",num,40);
                    if (strlen(num) > 0 ) {
                        emit(num, "call");
                        set_state(PART:"del-button", "default", 0.0);
                        set_state(PART:"call-2-effecter", "default", 0.0);
                    } else {
                        emit("ooops too little data", "embryo");
                    }
                } else if (strcmp(state, "incoming") == 0){
                    emit("activate", "call");
                } else if ((strcmp(state, "active") == 0) || 
                            (strcmp(state, "dialing") == 0)) {
                    emit("releasing", "embryo");  
                    emit("release", "call");  
                }
                else if (strcmp(state, "pin") == 0) {
                    new num[40];
                    num[39] = get_text(PART:"pin-text",num,40);
                    emit(num, "sending_pin");
                }
            } else {
                emit("blew up", "embryo");
            }
        }
    }
  
    parts {
        part {
            name: "base";
            type: RECT;
            description { 
                state: "default"  0.0;
                color: 0 0 0 155;
            }
        }
        part {
            name: "back-button";
            type: IMAGE;
            mouse_events: 1;
            description {
                state: "default" 0.0;
                min: 114 33;
                max: 114 33;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 9 20;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 123 53;
                    to: "base";
                }
                image { normal: "back.png"; }
                visible: 0;
            }
        }
        
        part {
            name: "next-button";
            type: IMAGE;
            mouse_events: 1;
            description {
                visible:0;
                state: "default" 0.0;         
                min: 159 69;
                max: 159 69;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }                
                image { normal: "next.png"; }
                visible: 1;
            }
            description {
                state: "clicked" 0.0;
                inherit:"default" 0.0;
                image.normal: "next_pressed.png";
            }
        }
        part {
            name: "num_field";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                rel1 {
                    relative:0.1062 0.205;
                    // offset: 51 48;
                    to: "base";
                }
                rel2 {
                    relative:0.8959 0.2875;
                    // offset: 430 92;
                    to: "base";
                }
            }
            description {
                state: "incoming" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "dialing" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "active" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "releasing" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "pin" 0.0;
                inherit:"default" 0.0;
            }
        }        
        part {
            name: "num_field-text";
            type: TEXT;
            mouse_events: 0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 1.0;
                    size: 48;
                    text: "";
                    font: "Sans";
                    elipsis: 1.0; 
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "num_field";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "num_field";
                }
            }
            description {
                state: "incoming" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "dialing" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "active" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "releasing" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "pin" 0.0;
                inherit:"default" 0.0;
            }
        }
        
        part {
            name:"duration_timer";
            type: TEXT;
            mouse_events: 0;
            description {
              visible:0;
            }
            description {
                state: "active" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.0 1.0;
                    size: 16;
                    text: "09";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.1062 0.3153;
                    to: "base";
                }
                rel2 {
                    relative: 0.3375 0.2656;
                    to: "base";
                }
            }
            description {
                state: "incoming" 0.0;
                inherit: "active" 0.0;
                text.text: "incoming...";
            }
        }
        
        part {
            name: "call-button";
            type: IMAGE;
            mouse_events: 1;
            description {
                state: "default" 0.0;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }
                image { normal: "call_activate2.png"; }
                visible: 1;
            }
            description {
                state: "incoming" 0.0;
                inherit:"default" 0.0;
                image.normal: "call_activate2.png";
            }
            description {
                state: "pin" 0.0;
                inherit:"default" 0.0;
                image.normal: "call_activate2.png";
            }
            description {
                state: "dialing" 0.0;
                inherit:"default" 0.0;
                image.normal: "call_end2.png";
            }
            description {
                state: "active" 0.0;
                inherit:"default" 0.0;
                image.normal: "call_end2.png";
            }
            description {
                state: "releasing" 0.0;
                inherit:"default" 0.0;
                image.normal: "call_end2.png";
            }
        }
        
        part {
            name: "call-2-effecter";
            type: IMAGE;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }
                image { normal: "call_activate.png"; }
                visible: 0;
            }
            description {
                state: "active_clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "call_activate_pressed.png";
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }
                visible: 1;
            }
            description {
                state: "end_clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "call_end_pressed.png";
                rel1 {
                    relative: 0.0 0.0;
                    offset: 320 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 479 88;
                    to: "base";
                }
                visible: 1;
            }
        }
        
        part {
            name: "del-button";
            type: IMAGE;
            mouse_events: 1;
            description {
                min: 159 69;
                max: 159 69;
                state: "default" 0.0;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 19;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 160 88;
                    to: "base";
                }
                image { normal: "back.png"; }
                visible: 1;
            }
            description {
                state: "clicked" 0.0;
                inherit:"default" 0.0;
                image.normal: "back_pressed.png";
            }
            description {
                state: "number" 0.0;
                inherit:"default" 0.0;
                image.normal: "backspace.png";
            }
            description {
                state: "number-pressed" 0.0;
                inherit:"default" 0.0;
                image.normal: "backspace_pressed.png";
            }
            description {
                state: "incoming" 0.0;
                inherit:"default" 0.0;
                image.normal: "speaker.png"; //TODO: new icon
            }
            description {
                state: "pin" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "dialing" 0.0;
                inherit:"default" 0.0;
                image.normal: "speaker.png"; //TODO: new icon
            }
            description {
                state: "silent" 0.0;
                inherit: "default" 0.0;
                image.normal: "speaker.png"; // TODO: new icon
            }
            description {
                state: "active" 0.0;
                inherit:"default" 0.0;
                image.normal: "speaker.png";
            }
            description {
                state: "muted" 0.0;
                inherit: "default" 0.0;
                image.normal: "mute.png";
            }
            description {
                state: "releasing" 0.0;
                inherit: "default" 0.0;
            }
        }
        
        part {
            name: "del-button-effecter";
            type: RECT;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                color: 255 200 255 100;
                rel1 {
                    relative: 0.0 0.0;
                    // offset: 320 210;
                    to: "del-button";
                }
                rel2 {
                    relative: 1.0 1.0;
                    // offset: 479 279;
                    to: "del-button";
                }
                visible: 0;
            }
            description {
                state: "visible" 0.0;
                inherit: "default" 0.0;
                visible:1;
            }
        }
        
        _PART_KEYPAD("button-1-2", "1", "", 0.01, 0.3615,  0.3345, 0.5095);
        _PART_KEYPAD("button-2-2", "2", "ABC", 0.34, 0.3615,  0.6645, 0.5095);
        _PART_KEYPAD("button-3-2", "3", "DEF", 0.6745, 0.3615,  0.989, 0.5095);
        _PART_KEYPAD("button-4-2", "4", "GHI", 0.01, 0.517,  0.3345, 0.665);
        _PART_KEYPAD("button-5-2", "5", "JKL", 0.34, 0.517,  0.6645, 0.665);
        _PART_KEYPAD("button-6-2", "6", "MNO", 0.6745, 0.517,  0.989, 0.665);
        _PART_KEYPAD("button-7-2", "7", "PQRS", 0.01, 0.6725,  0.3345, 0.8205);
        _PART_KEYPAD("button-8-2", "8", "TUV", 0.34, 0.6725,  0.6645, 0.8205);
        _PART_KEYPAD("button-9-2", "9", "WXYZ", 0.6745, 0.6725,  0.989, 0.8205);
        _PART_KEYPAD("button-star-2", "*", "", 0.01, 0.828,  0.3345, 0.976);
        _PART_KEYPAD("button-0-2", "0", "+", 0.34, 0.828,  0.6645, 0.976);
        _PART_KEYPAD("button-hash-2", "#", "", 0.6745, 0.828,  0.989, 0.976);
        
        part {
            name:"blocker";
            type: RECT;
            mouse_events:1;
            description { 
                state: "default" 0.0;
                visible:0;
            }
            description {
                state: "incoming" 0.0;
                color: 0 0 0 100;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 0 230;
                    to: "base";
                }
                rel2 {
                    relative: 0.0 0.0;
                    offset: 480 640;
                    to: "base";
                }
            }
            description {
                state: "dialing" 0.0;
                inherit:"incoming" 0.0;
            }
            description {
                state: "active" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "pin" 0.0;
                inherit:"default" 0.0;
            }
            description {
                state: "releasing" 0.0;
                inherit:"incoming" 0.0;
            }
        }
        
        part {
            name: "pin-text";
            type: TEXT;
            mouse_events: 0;
            description { 
                state: "default" 0.0;
                color: 255 0 0 255;
                visible: 1;
                text {
                    align: 0.5 0.0;
                    size: 18;
                    text: "";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                }
            }
        }
    }
    
    programs {
        program { 
            name: "num_field-clicked";
            signal: "mouse,clicked,1";
            source: "num_field";
            action: SIGNAL_EMIT "num_field_pressed" "num_field-text2";
        }
        program { 
            name: "call-button";
            signal: "mouse,down,1";
            source: "call-button";
            script {
                new state[30];
                new Float:floaty;
                if (get_state(PART:"call-button", state[0], 30, floaty) == 0) {
                    emit(state, "embryo")
                    if ((strcmp(state, "default") == 0) || 
                        (strcmp(state, "incoming") == 0) || 
                        (strcmp(state, "pin") == 0)) {
                        set_state(PART:"call-2-effecter", "active_clicked", 0.0);
                    } else {
                        set_state(PART:"call-2-effecter", "end_clicked", 0.0);
                    }
                }
            }
        }
        program { 
            name: "call-button-clicked";
            signal: "mouse,up,1";
            source: "call-button";
            script {
                // set_state(PART:"call-2-effecter", "default", 0.0);
                call_btn();
            }
        }
        program { 
            name: "del-button-changer";
            signal: "mouse,down,1";
            source: "del-button";
            script {
                start_timer("del_all");
                del_digit();
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0) {
                    if (!((strcmp(state, "active")   == 0) ||
                           (strcmp(state, "incoming") == 0) ||
                           (strcmp(state, "dialing")  == 0) ||
                           (strcmp(state, "muted")    == 0) ||
                           (strcmp(state, "silent")   == 0))) {
                        if (get_int(del_button_pressed) == 1) {
                            set_state(PART:"del-button", "clicked", 0.0);
                        } else {
                            set_state(PART:"del-button", "number-pressed", 0.0);
                        }
                    }
                }
            }
        }
        program { 
            name: "del-button-clicked";
            signal: "mouse,up,1";
            source: "del-button";
            script {
                stop_timer();
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0) {
                    if (!((strcmp(state, "active") == 0) ||
                           (strcmp(state, "incoming") == 0) ||
                           (strcmp(state, "dialing")  == 0) ||
                           (strcmp(state, "muted")    == 0) ||
                           (strcmp(state, "silent")   == 0))) {
                        new old[40];
                        old[39] = get_text(PART:"num_field-text",old,40);
                        new len = strlen(old);
                        if (len != 0) {
                            set_state(PART:"del-button", "number", 0.0);
                        } else {
                            set_state(PART:"del-button", "default", 0.0);
                            if (get_int(del_button_pressed) == 1) {
                                emit("back","main_command");
                            }
                        }
                    }
                }
            }
        }
        program { 
            name: "button-0-timer-on";
            signal: "mouse,down,1";
            source: "button-0-2";
            script {
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0) {
                    if (strcmp(state, "pin") != 0) {
                        start_timer("add_plus");
                    }
                }
            }
        }
        program { 
            name: "button-0-timer-off";
            signal: "mouse,up,1";
            source: "button-0-2";
            script {
                new state[30];
                new Float:floaty;
                if (get_state(PART:"del-button", state[0], 30, floaty) == 0) {
                    if (strcmp(state, "pin") != 0) {
                        stop_timer();
                    }
                }
            }
        }
        // STATE CHANGE PROGRAMS
        _PART_STATE_CHANGE_PROG("default", "0.0");
        _PART_STATE_CHANGE_PROG("incoming", 0.0);
        _PART_STATE_CHANGE_PROG("dialing", 0.0);
        _PART_STATE_CHANGE_PROG("active", 0.0);
        _PART_STATE_CHANGE_PROG("releasing", 0.0);
        _PART_STATE_CHANGE_PROG("pin", 0.0);
           
        // programs ROW TWO
        _PART_KEYPAD_PROG2("button-1-2", "1");
        _PART_KEYPAD_PROG2("button-2-2", "2");
        _PART_KEYPAD_PROG2("button-3-2", "3");
        // programs ROW THREE
        _PART_KEYPAD_PROG2("button-4-2", "4");
        _PART_KEYPAD_PROG2("button-5-2", "5");
        _PART_KEYPAD_PROG2("button-6-2", "6");
        // programs ROW FOUR
        _PART_KEYPAD_PROG2("button-7-2", "7");
        _PART_KEYPAD_PROG2("button-8-2", "8");
        _PART_KEYPAD_PROG2("button-9-2", "9");
        // programs ROW FIVE
        _PART_KEYPAD_PROG2("button-star-2", "*");
        _PART_KEYPAD_PROG2("button-0-2", "0");
        _PART_KEYPAD_PROG2("button-hash-2", "#");
        program { 
            name: "mute-error";
            signal: "mute-button";
            source: "error";
            action: STATE_SET "active" 0.0;
            target: "del-button";
        }
        program { 
            name: "incoming";
            signal: "to_incoming_state";
            source: "*";
            action: STATE_SET "incoming" 0.0;
            target: "duration_timer";
        }
        program { 
            name: "start_counter";
            signal: "to_active_state";
            source: "*";
            script {
                calltime(1);
            }
        }
    }
}



