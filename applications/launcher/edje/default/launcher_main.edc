
group { 
    name: "main";
    min: 480 520;
    max: 480 590;
    script {
        public clock_updating_timer_id = 0;
        public anim_var = 0;
        public loading_anim(val) {
            new state[30];
            new Float:floaty;
            if (get_state(PART:"blocker-text",state[0],30,floaty) == 0) {
                if (strcmp(state, "unblocked") != 0) {
                    new inter = get_int(anim_var);
                    if ( inter == 1 ) {
                        set_state(PART:"blocker-text", "default", 0.1);
                        timer(0.75, "loading_anim", 1);
                        set_int(anim_var,2);
                        // emit("zero ran through", "embryo");
                    } else if ( inter == 2) {
                        set_state(PART:"blocker-text", "default", 0.2);
                        timer(0.75, "loading_anim", 2);
                        set_int(anim_var,3);
                        // emit("one ran through", "embryo");
                    } else if ( inter == 3 ) {
                        set_state(PART:"blocker-text", "default", 0.3);
                        timer(0.75, "loading_anim", 0);
                        set_int(anim_var,0);
                        // emit("two ran through", "embryo");
                    } else if ( inter == 0 ) {
                        set_state(PART:"blocker-text", "default", 0.0);
                        timer(0.75, "loading_anim", 0);
                        set_int(anim_var,1);
                        // emit("two ran through", "embryo");
                    } else {
                        new buf[11];
                        snprintf(buf, 10, "%i", inter);
                        emit(buf, "embryo");
                    }
                }
            }
        }
  
        public clock_cb(val) {
            new buf[11];
            new lday[100];
            new day_s[50];
            new month_s[40];
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new Float:s;
            date(year, month, day, yearday, weekday, hour, minute, second);
            // timer(60.0 - second, "clock_cb", 1);
            // update every 5 seconds just for changing actual time 
            // in config. no other way to know unless you poll 
            // (and every 5 seconds is better than 60 for
            // responsiveness to config changes
            s = 60.0 - second;
            while (s < 0.0) s = s + 5.0;
            new i = timer(60.0 - second, "clock_cb", 1);      
            set_int(clock_updating_timer_id, i);
            if ((hour < 10) && (minute < 10)) {
                snprintf(buf, 10, "0%i:0%i", hour, minute);
            } 
            else if ((hour < 10) && (minute >= 10)) {
                snprintf(buf, 10, "0%i:%i", hour, minute);
            }
            else if ((hour >= 10) && (minute < 10)) {
                snprintf(buf, 10, "%i:0%i", hour, minute);
            }
            else if ((hour >= 10) && (minute >= 10)) { 
                snprintf(buf, 10, "%i:%i", hour, minute);
            }
            new buf2[2];
            strcut(buf2, buf, 0, 1);
            set_text(PART:"home-clock-hour-digit-1", buf2);
            strcut(buf2, buf, 1, 2);
            set_text(PART:"home-clock-hour-digit-0", buf2);
            strcut(buf2, buf, 3, 4);
            set_text(PART:"home-clock-minute-digit-1", buf2);
            strcut(buf2, buf, 4, 5);
            set_text(PART:"home-clock-minute-digit-0", buf2);
            switch(weekday) {
                case 0:
                    snprintf(day_s, 50, "%s", "Monday");
                case 1:
                    snprintf(day_s, 50, "%s", "Tuesday");
                case 2:
                    snprintf(day_s, 50, "%s", "Wednesday");
                case 3:
                    snprintf(day_s, 50, "%s", "Thursday");
                case 4:
                    snprintf(day_s, 50, "%s", "Friday");
                case 5:
                    snprintf(day_s, 50, "%s", "Saturday");
                case 6:
                    snprintf(day_s, 50, "%s", "Sunday");
            }
    
            switch(month) {
                case 1:
                    snprintf(month_s, 40, "%s", "January");
                case 2:
                    snprintf(month_s, 40, "%s", "February");
                case 3:
                    snprintf(month_s, 40, "%s", "March");
                case 4:
                    snprintf(month_s, 40, "%s", "April");
                case 5:
                    snprintf(month_s, 40, "%s", "May");
                case 6:
                    snprintf(month_s, 40, "%s", "June");
                case 7:
                    snprintf(month_s, 40, "%s", "July");
                case 8:
                    snprintf(month_s, 40, "%s", "August");
                case 9:
                    snprintf(month_s, 40, "%s", "September");
                case 10:
                    snprintf(month_s, 40, "%s", "October");
                case 11:
                    snprintf(month_s, 40, "%s", "November");
                case 12:
                    snprintf(month_s, 40, "%s", "December");
            }
            snprintf(lday, 100, "%s, %s %i, %i", day_s, month_s, day, year);
            set_text(PART:"clock-date", lday);
        }
    }     
  
    parts {
        part {
            name: "base";
            type: IMAGE;
            description { 
                state: "default" 0.0;
                rel1 { //launcher TODO: dont hide the topbar..
                    relative: 0.0 0.08; 
                }
                rel2 { relative: 1.0 1.0; }
                image { normal: "bg.png"; }
            }
        }
        
       // Show the red rim
        part {
            name:  "clock-box-background";
            type: RECT;
            description {
                state: "default" 0.0;
                color: 0 0 0 255;
                visible: 0;
                rel1 {
                    relative: 0.0 0.07;
                    offset: 0 1;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 0.265;
                    // offset: 480 0.195;
                    to: "base";
                } 
            }
            description { 
                state: "to-blink" 0.0;
                inherit: "default" 0.0;
            }
        }
        
        part {
            name:  "clock-box-background-layer2";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                visible: 0;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 1;
                    to: "clock-box-background";
                }
                rel2 {
                    relative: 1.0 1.0;
                    offset: -3 -2;
                    to: "clock-box-background";
                }
            }
        }

        part {
            name:  "alarm_switch_button";
            type: RECT;
            mouse_events:1;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                visible: 0;
                rel1 {
                    relative: 0.048 0.1325;
                    // offset: 23 40;
                    to: "base";
                }
                rel2 {
                    relative: 0.431 0.2044;
                    // offset: 207 86;
                    to: "base";
                } 
            }
        }
        
        part {
            name:  "alarm_switch_text";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                visible: 0;
                text {
                    align: 0.0 0.5;
                    font: "Sans";
                    size: 25;
                    text: "Alarm On";
                }
                rel1 {
                    relative: 0.0 0.0;
                    to: "alarm_switch_button";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "alarm_switch_button";
                } 
            }
            description { 
                state: "alarm_on" 0.0;
                inherit: "default" 0.0;
                text {
                    text: "Alarm Off";
                }
            }
        }

        part {
            name:  "clock-box";
            type: RECT;
            description { 
                state: "default" 0.0;
                color: 0 0 0 255;
                visible: 0;
                rel1 {
                    relative: 0.0 0.0;
                    offset: 1 1;
                    to: "clock-box-background";
                }
                rel2 {
                    relative: 1.0 1.0;
                    offset: -3 -2;
                    to: "clock-box-background";
                } 
            }
            description {
                state: "to-the-right" 0.0;
                inherit: "default" 0.0;
                rel1 {
                    relative: 0.5 0.0;
                    to: "clock-box-background";
                }
            }
        }
       
        // invisible slider on top of Clock
        part {
            name:  "invisible-slider";
            type: RECT;
            // dragable {
            //     x: 1 1 0;
            //     y: 0 0 0;
            // }
            description { 
                state: "default" 0.0;
                color: 0 0 0 55;
                fixed: 1 1;
                rel1 {
                    relative: 0.0 0.0;
                    to: "clock-box";
                }
                rel2 {
                    relative: 1.0 1.0;
                    offset: -3 -2;
                    to: "clock-box";
                } 
            }
        }

        part {
            name:  "home-clock-hour-digit-1";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                visible: 1;
                text {
                    font: "Sans";
                    size: 135;
                }
                rel1 {
                    relative: 0.042 0.0;
                    to:"invisible-slider";
                }
                rel2 {
                    relative: 0.25 1.0;
                    to:"invisible-slider";
                } 
            }
            description { 
                state: "fade-out" 0.0;
                inherit: "default" 0.0;
                color: 220 220 220 220;
                rel2 {
                    relative: 0.45 1.0;
                } 
            }
        }
        
        part {
            name:  "home-clock-hour-digit-0";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    font: "Sans";
                    size: 135;
                }
                rel1 {
                    relative: 0.26 0.0;
                    to:"invisible-slider";
                }
                rel2 {
                    relative: 0.46 1.0;
                    to:"invisible-slider";
                } 
            }
            description { 
                state: "fade-out" 0.0;
                inherit: "default" 0.0;
                color: 220 220 220 220;
                rel1 {
                    relative: 0.45 0.0;
                    to:"invisible-slider";
                } 
                rel2 {
                    relative: 0.85 1.0;
                    to:"invisible-slider";
                } 
            }
        }
        
        part {
            name:  "home-clock-colon";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.5 0.75;
                    font: "Sans";
                    size: 135;
                    text: ":";
                }
                rel1 {
                    relative: 0.458 0.0;
                    // offset: 220 0;
                    to:"invisible-slider";
                }
                rel2 {
                    relative: 0.563 1.0;
                    // offset: -210 0;
                    to:"invisible-slider";
                } 
            }
            description {
                state: "invisible" 0.0;
                inherit: "default" 0.0;
                visible: 0; 
            }
            description { 
                state: "fade-out" 0.0;
                inherit: "default" 0.0;
                color: 220 220 220 220;
                rel1 {
                    // offset: 200 0;
                    relative: 0.416 0;
                    to:"invisible-slider";
                } 
                rel2 {
                    relative: 0.01 1.0;
                    to:"invisible-slider";
                    // offset: 5 0;
                } 
            }
        }
        
        part {
            name:  "home-clock-minute-digit-1";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.5 0.5;
                    font: "Sans";
                    size: 135;
                }
                rel1 {
                    relative: 0.541 0.0;
                    // offset: 260 0;
                    to:"invisible-slider";
                }
                rel2 {
                    relative: 0.75 1.0;
                    // offset: -120 0;
                    to:"invisible-slider";
                } 
            }
            description { 
                state: "fade-out" 0.0;
                inherit: "default" 0.0;
                color: 220 220 220 220;
            }
        }
        
        part {
            name:  "home-clock-minute-digit-0";
            type: TEXT;
            mouse_events:0;
            description { 
                state: "default" 0.0;
                color: 255 255 255 255;
                text {
                    align: 0.5 0.5;
                    font: "Sans";
                    size: 135;
                }
                rel1 {
                    // offset: 360 0;
                    relative: 0.75 0.0;
                    to:"invisible-slider";
                }
                rel2 {
                    // offset: -20 0;
                    relative: 0.958 1.0;
                    to:"invisible-slider";
                } 
            }
            description { 
                state: "fade-out" 0.0;
                inherit: "default" 0.0;
                color: 220 220 220 220;
            }
        }

        part {
            name:  "clock-date";
            type: TEXT;
            mouse_events: 0;
            description { 
                state: "default" 0.0;
                text {
                    align: 0.075 0.92;
                    size: 28;
                    text: "";
                    font: "Sans";
                }
                rel1 {
                    relative: 0.068 0.292;
                    // offset: 23 142;
                    to: "base";
                }
                rel2 {
                    relative: 0.9625 0.3169;
                    // offset: 270 158;
                    to: "base";
                } 
            }
        }

        part {
            name: "alarm_icon";
            type: IMAGE;
            description { 
                state: "default" 0.0;
                min: 14 13;
                max: 14 13;
                rel1 {
                    relative: 0.5833 0.2903;
                    // offset: 280 141;
                    to: "base";
                }
                rel2 {
                    relative: 0.6125 0.3106;
                    // offset: 294 154;
                    to: "base";
                } 
                image { normal: "alarm.png"; }
                visible: 0;
            }
            description { 
                state: "alarm_on" 0.0;
                inherit:"default" 0.0;
                visible: 1;
            }
        }

        part {
            name:  "link-box";
            type: SWALLOW;
            description { 
                state: "default" 0.0;
                fixed: 1 1;
                color:0 0 0 255;
                rel1 {
                    relative: 0.0458 0.35; //TODO: make it double column
                    // offset: 22 247;
                    to: "base";
                }
                rel2 {
                    relative: 0.958 0.90125;
                    // offset: 460 532;
                    to: "base";
                } 
            }
        }
        
        part {
            name:  "blocker";
            type: RECT;
            description { 
                state: "default" 0.0;
                color:0 0 0 188;
                rel1 {
                    relative: 0.0 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                } 
            }
            description { 
                state: "unblocked" 0.0;
                visible:0;
            }
        }
        
        part {
            name:  "blocker-text";
            type: TEXT;
            description { 
                state: "default" 0.0;
                rel1 {
                    relative: 0.35 0.0;
                    to: "base";
                }
                rel2 {
                    relative: 1.0 1.0;
                    to: "base";
                } 
                text {
                    align: 0.0 0.5;
                    size: 36;
                    text: "loading";
                    font: "Sans";
                }
            }
            description { 
                state: "default" 0.1;
                inherit: "default" 0.0;
                text {
                    text: "loading.";
                }
            }
            description { 
                state: "default" 0.2;
                inherit: "default" 0.0;
                text {
                    text: "loading..";
                }
            }
            description { 
                state: "default" 0.3;
                inherit: "default" 0.0;
                text {
                    text: "loading...";
                }
            }
            description { 
                state: "unblocked" 0.0;
                visible:0;
            }
        }
    }
    
    programs {
        program { 
            name: "init";
            signal: "load";
            source: "*";
            script {
                clock_cb(1);
                loading_anim(0);
            }
        }/*
        program {
            name: "stop_clock_update";
            signal: "stop_clock_update";
            source: "*";
            script {
                stop_clock_timer(1);
            }
        }*/
        program {
            name: "start_clock_update";
            signal: "start_clock_update";
            source: "*";
            script { clock_cb(1); }
        }
        program {
            name: "unblock";
            signal: "ready";
            source: "*";
            action: STATE_SET "unblocked" 0.0;
            target: "blocker";
            target: "blocker-text";
        }
        program {
            name: "block";
            signal: "unready";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "blocker";
        }
        program {
            name:"embryo-test";
            script {
                emit("blocking-test","embryo");
            }
        }/*
        program {
            name: "alarm-switch";
            signal: "mouse,up,1";
            source: "alarm_switch_button";
            script {
                switch_alarm(1)
            }
        }*/
        program { // for colon to blink
            name: "on_home-clock-colon_blink";
            action: ACTION_STOP;
            target: "home-clock-colon_blink";
            target: "home-clock-colon_hide";
            target: "home-clock-colon_blink_timer";
            target: "home-clock-colon_hide_timer";
            after: "time_setting_on";
        }
        program { 
            name: "time_setting_on";
            action: SIGNAL_EMIT "time_setting_on" "*";
            after: "home-clock-colon_blink";
        }
        program { 
            name: "on_home-clock-colon_blink_stop";
            action: ACTION_STOP;
            target: "home-clock-colon_blink";
            target: "home-clock-colon_hide";
            target: "home-clock-colon_blink_timer";
            target: "home-clock-colon_hide_timer";
            after: "time_setting_off";
        }
        program { 
            name: "time_setting_off";
            script {
                new state_name[30];
                new Float:dummy;
                get_state(PART:"alarm_icon", state_name, 30, dummy);
                if (!strcmp(state_name, "default")) {
                    emit("time_setting_off", "time")
                }
                else if (!strcmp(state_name, "alarm_on")) {
                    emit("time_setting_off", "alarm")
                }
            }
            after: "home-clock-colon_show";
        }
        program {
            name: "home-clock-colon_show";
            action: STATE_SET "default" 0.0;
            target: "home-clock-colon";
        }
        program { 
            name: "home-clock-colon_blink";
            action: STATE_SET "invisible" 0.0;
            target: "home-clock-colon";
            after: "home-clock-colon_blink_timer";
        }
        program { 
            name: "home-clock-colon_hide";
            action: STATE_SET "default" 0.0;
            target: "home-clock-colon";
            transition: SINUSOIDAL 0.2;
            after: "home-clock-colon_hide_timer";
        }
        program { 
            name: "home-clock-colon_blink_timer";
            in: 0.55 0.0;
            after: "home-clock-colon_hide";
        }
        program { 
            name: "home-clock-colon_hide_timer";
            in: 0.2 0.0;
            after: "home-clock-colon_blink";
        }/*
        program {
            name: "top-bar-pressed";
            signal: "mouse,up,1";
            source: "top-bar";
            action: SIGNAL_EMIT "quit_app" "quit";
        }
        program {
            name: "switch_clock_on";
            signal: "app_active";
            source: "*";
            action: STATE_SET "visible" 0.0;
            target: "clock";
        }
        program {
            name: "switch_clock_off";
            signal: "switch_clock_off";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "clock";
        }
        program {
            name: "set_gsm";
            signal: "*";
            source: "gsm_change";
            script {
                new val;
                val = atoi(sig);
                if( val >= 80 ) {
                    set_state(PART:"gsm", "gsm_strengh_4", 0.0);
                } else if( val >= 60 && val < 80) {
                    set_state(PART:"gsm", "gsm_strengh_3", 0.0);
                } else if( val >= 40 && val < 60) {
                    set_state(PART:"gsm", "gsm_strengh_2", 0.0);
                } else if( val > 20 && val < 40) {
                    set_state(PART:"gsm", "gsm_strengh_1", 0.0);
                } else if( val > 0 && val < 20) {
                    set_state(PART:"gsm", "gsm_strengh_0", 0.0);
                }
                else {
                    set_state(PART:"gsm", "gsm_no_service", 0.0);
                }
            }
        }
        program {
            name: "set_battery_status_charging";
            signal: "*";
            source: "battery_status_charging";
            action: STATE_SET "charging" 0.0;
            target: "battery";
        }
        program {
            name: "set_battery";
            signal: "*";
            source: "battery_change";
            script {
                new val;
                val = atoi(sig);
                if(val >= 66) {
                    set_state(PART:"battery", "battery_3", 0.0);
                }
                else if(val >= 33 && val < 66) {
                    set_state(PART:"battery", "battery_2", 0.0);
                }
                else if(val < 33){
                    set_state(PART:"battery", "battery_1", 0.0);
                }
                emit(sig,"embryo");
            }
        }*/
    }
}
